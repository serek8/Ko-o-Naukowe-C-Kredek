#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JanSeredynskiLab4Zad2.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GamePokemon")]
	public partial class DataClassesGamePokemonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPokemon(Pokemon instance);
    partial void UpdatePokemon(Pokemon instance);
    partial void DeletePokemon(Pokemon instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserPokemonList(UserPokemonList instance);
    partial void UpdateUserPokemonList(UserPokemonList instance);
    partial void DeleteUserPokemonList(UserPokemonList instance);
    partial void InsertFightResult(FightResult instance);
    partial void UpdateFightResult(FightResult instance);
    partial void DeleteFightResult(FightResult instance);
    partial void InsertPokemonType(PokemonType instance);
    partial void UpdatePokemonType(PokemonType instance);
    partial void DeletePokemonType(PokemonType instance);
    #endregion
		
		public DataClassesGamePokemonDataContext() : 
				base(global::JanSeredynskiLab4Zad2.Properties.Settings.Default.GamePokemonConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesGamePokemonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesGamePokemonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesGamePokemonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesGamePokemonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Pokemon> Pokemons
		{
			get
			{
				return this.GetTable<Pokemon>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserPokemonList> UserPokemonLists
		{
			get
			{
				return this.GetTable<UserPokemonList>();
			}
		}
		
		public System.Data.Linq.Table<View_FightBonus_PokemonType> View_FightBonus_PokemonTypes
		{
			get
			{
				return this.GetTable<View_FightBonus_PokemonType>();
			}
		}
		
		public System.Data.Linq.Table<FightResult> FightResults
		{
			get
			{
				return this.GetTable<FightResult>();
			}
		}
		
		public System.Data.Linq.Table<View_User_PokemonList> View_User_PokemonLists
		{
			get
			{
				return this.GetTable<View_User_PokemonList>();
			}
		}
		
		public System.Data.Linq.Table<PokemonType> PokemonTypes
		{
			get
			{
				return this.GetTable<PokemonType>();
			}
		}
		
		public System.Data.Linq.Table<View_PokemonType_Pokemon> View_PokemonType_Pokemons
		{
			get
			{
				return this.GetTable<View_PokemonType_Pokemon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pokemon")]
	public partial class Pokemon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PokemonID;
		
		private string _Name;
		
		private int _PokemonTypeID;
		
		private int _DamageRate;
		
		private int _HitPoint;
		
		private int _Cost;
		
		private EntityRef<PokemonType> _PokemonType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPokemonIDChanging(int value);
    partial void OnPokemonIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPokemonTypeIDChanging(int value);
    partial void OnPokemonTypeIDChanged();
    partial void OnDamageRateChanging(int value);
    partial void OnDamageRateChanged();
    partial void OnHitPointChanging(int value);
    partial void OnHitPointChanged();
    partial void OnCostChanging(int value);
    partial void OnCostChanged();
    #endregion
		
		public Pokemon()
		{
			this._PokemonType = default(EntityRef<PokemonType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PokemonID
		{
			get
			{
				return this._PokemonID;
			}
			set
			{
				if ((this._PokemonID != value))
				{
					this.OnPokemonIDChanging(value);
					this.SendPropertyChanging();
					this._PokemonID = value;
					this.SendPropertyChanged("PokemonID");
					this.OnPokemonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonTypeID", DbType="Int NOT NULL")]
		public int PokemonTypeID
		{
			get
			{
				return this._PokemonTypeID;
			}
			set
			{
				if ((this._PokemonTypeID != value))
				{
					if (this._PokemonType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPokemonTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PokemonTypeID = value;
					this.SendPropertyChanged("PokemonTypeID");
					this.OnPokemonTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DamageRate", DbType="Int NOT NULL")]
		public int DamageRate
		{
			get
			{
				return this._DamageRate;
			}
			set
			{
				if ((this._DamageRate != value))
				{
					this.OnDamageRateChanging(value);
					this.SendPropertyChanging();
					this._DamageRate = value;
					this.SendPropertyChanged("DamageRate");
					this.OnDamageRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitPoint", DbType="Int NOT NULL")]
		public int HitPoint
		{
			get
			{
				return this._HitPoint;
			}
			set
			{
				if ((this._HitPoint != value))
				{
					this.OnHitPointChanging(value);
					this.SendPropertyChanging();
					this._HitPoint = value;
					this.SendPropertyChanged("HitPoint");
					this.OnHitPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Int NOT NULL")]
		public int Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PokemonType_Pokemon", Storage="_PokemonType", ThisKey="PokemonTypeID", OtherKey="PokemonTypeID", IsForeignKey=true)]
		public PokemonType PokemonType
		{
			get
			{
				return this._PokemonType.Entity;
			}
			set
			{
				PokemonType previousValue = this._PokemonType.Entity;
				if (((previousValue != value) 
							|| (this._PokemonType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PokemonType.Entity = null;
						previousValue.Pokemons.Remove(this);
					}
					this._PokemonType.Entity = value;
					if ((value != null))
					{
						value.Pokemons.Add(this);
						this._PokemonTypeID = value.PokemonTypeID;
					}
					else
					{
						this._PokemonTypeID = default(int);
					}
					this.SendPropertyChanged("PokemonType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Name;
		
		private string _Password;
		
		private int _Money;
		
		private int _Point;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMoneyChanging(int value);
    partial void OnMoneyChanged();
    partial void OnPointChanging(int value);
    partial void OnPointChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Int NOT NULL")]
		public int Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int NOT NULL")]
		public int Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPokemonList")]
	public partial class UserPokemonList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PokemonListID;
		
		private int _UserID;
		
		private int _PokemonID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPokemonListIDChanging(int value);
    partial void OnPokemonListIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPokemonIDChanging(int value);
    partial void OnPokemonIDChanged();
    #endregion
		
		public UserPokemonList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonListID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PokemonListID
		{
			get
			{
				return this._PokemonListID;
			}
			set
			{
				if ((this._PokemonListID != value))
				{
					this.OnPokemonListIDChanging(value);
					this.SendPropertyChanging();
					this._PokemonListID = value;
					this.SendPropertyChanged("PokemonListID");
					this.OnPokemonListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonID", DbType="Int NOT NULL")]
		public int PokemonID
		{
			get
			{
				return this._PokemonID;
			}
			set
			{
				if ((this._PokemonID != value))
				{
					this.OnPokemonIDChanging(value);
					this.SendPropertyChanging();
					this._PokemonID = value;
					this.SendPropertyChanged("PokemonID");
					this.OnPokemonIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_FightBonus_PokemonType")]
	public partial class View_FightBonus_PokemonType
	{
		
		private int _IDPokemonTypeAgressor;
		
		private string _PokemonTypeNameAgressor;
		
		private int _BonusRate;
		
		private string _PokemonTypeNameDefender;
		
		private int _IDPokemonTypeDefender;
		
		public View_FightBonus_PokemonType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPokemonTypeAgressor", DbType="Int NOT NULL")]
		public int IDPokemonTypeAgressor
		{
			get
			{
				return this._IDPokemonTypeAgressor;
			}
			set
			{
				if ((this._IDPokemonTypeAgressor != value))
				{
					this._IDPokemonTypeAgressor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonTypeNameAgressor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PokemonTypeNameAgressor
		{
			get
			{
				return this._PokemonTypeNameAgressor;
			}
			set
			{
				if ((this._PokemonTypeNameAgressor != value))
				{
					this._PokemonTypeNameAgressor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusRate", DbType="Int NOT NULL")]
		public int BonusRate
		{
			get
			{
				return this._BonusRate;
			}
			set
			{
				if ((this._BonusRate != value))
				{
					this._BonusRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonTypeNameDefender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PokemonTypeNameDefender
		{
			get
			{
				return this._PokemonTypeNameDefender;
			}
			set
			{
				if ((this._PokemonTypeNameDefender != value))
				{
					this._PokemonTypeNameDefender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPokemonTypeDefender", DbType="Int NOT NULL")]
		public int IDPokemonTypeDefender
		{
			get
			{
				return this._IDPokemonTypeDefender;
			}
			set
			{
				if ((this._IDPokemonTypeDefender != value))
				{
					this._IDPokemonTypeDefender = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FightResult")]
	public partial class FightResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FightID;
		
		private int _UserAgressorID;
		
		private int _UserDefenderID;
		
		private int _PokemonAgressor1ID;
		
		private int _PokemonAgressor2ID;
		
		private int _PokemonAgressor3ID;
		
		private int _PokemonDefender1ID;
		
		private int _PokemonDefender2ID;
		
		private int _PokemonDefender3ID;
		
		private System.Nullable<int> _Result;
		
		private string _ResultDescription;
		
		private System.Nullable<System.DateTime> _ResultDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFightIDChanging(int value);
    partial void OnFightIDChanged();
    partial void OnUserAgressorIDChanging(int value);
    partial void OnUserAgressorIDChanged();
    partial void OnUserDefenderIDChanging(int value);
    partial void OnUserDefenderIDChanged();
    partial void OnPokemonAgressor1IDChanging(int value);
    partial void OnPokemonAgressor1IDChanged();
    partial void OnPokemonAgressor2IDChanging(int value);
    partial void OnPokemonAgressor2IDChanged();
    partial void OnPokemonAgressor3IDChanging(int value);
    partial void OnPokemonAgressor3IDChanged();
    partial void OnPokemonDefender1IDChanging(int value);
    partial void OnPokemonDefender1IDChanged();
    partial void OnPokemonDefender2IDChanging(int value);
    partial void OnPokemonDefender2IDChanged();
    partial void OnPokemonDefender3IDChanging(int value);
    partial void OnPokemonDefender3IDChanged();
    partial void OnResultChanging(System.Nullable<int> value);
    partial void OnResultChanged();
    partial void OnResultDescriptionChanging(string value);
    partial void OnResultDescriptionChanged();
    partial void OnResultDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResultDateChanged();
    #endregion
		
		public FightResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FightID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FightID
		{
			get
			{
				return this._FightID;
			}
			set
			{
				if ((this._FightID != value))
				{
					this.OnFightIDChanging(value);
					this.SendPropertyChanging();
					this._FightID = value;
					this.SendPropertyChanged("FightID");
					this.OnFightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgressorID", DbType="Int NOT NULL")]
		public int UserAgressorID
		{
			get
			{
				return this._UserAgressorID;
			}
			set
			{
				if ((this._UserAgressorID != value))
				{
					this.OnUserAgressorIDChanging(value);
					this.SendPropertyChanging();
					this._UserAgressorID = value;
					this.SendPropertyChanged("UserAgressorID");
					this.OnUserAgressorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDefenderID", DbType="Int NOT NULL")]
		public int UserDefenderID
		{
			get
			{
				return this._UserDefenderID;
			}
			set
			{
				if ((this._UserDefenderID != value))
				{
					this.OnUserDefenderIDChanging(value);
					this.SendPropertyChanging();
					this._UserDefenderID = value;
					this.SendPropertyChanged("UserDefenderID");
					this.OnUserDefenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonAgressor1ID", DbType="Int NOT NULL")]
		public int PokemonAgressor1ID
		{
			get
			{
				return this._PokemonAgressor1ID;
			}
			set
			{
				if ((this._PokemonAgressor1ID != value))
				{
					this.OnPokemonAgressor1IDChanging(value);
					this.SendPropertyChanging();
					this._PokemonAgressor1ID = value;
					this.SendPropertyChanged("PokemonAgressor1ID");
					this.OnPokemonAgressor1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonAgressor2ID", DbType="Int NOT NULL")]
		public int PokemonAgressor2ID
		{
			get
			{
				return this._PokemonAgressor2ID;
			}
			set
			{
				if ((this._PokemonAgressor2ID != value))
				{
					this.OnPokemonAgressor2IDChanging(value);
					this.SendPropertyChanging();
					this._PokemonAgressor2ID = value;
					this.SendPropertyChanged("PokemonAgressor2ID");
					this.OnPokemonAgressor2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonAgressor3ID", DbType="Int NOT NULL")]
		public int PokemonAgressor3ID
		{
			get
			{
				return this._PokemonAgressor3ID;
			}
			set
			{
				if ((this._PokemonAgressor3ID != value))
				{
					this.OnPokemonAgressor3IDChanging(value);
					this.SendPropertyChanging();
					this._PokemonAgressor3ID = value;
					this.SendPropertyChanged("PokemonAgressor3ID");
					this.OnPokemonAgressor3IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonDefender1ID", DbType="Int NOT NULL")]
		public int PokemonDefender1ID
		{
			get
			{
				return this._PokemonDefender1ID;
			}
			set
			{
				if ((this._PokemonDefender1ID != value))
				{
					this.OnPokemonDefender1IDChanging(value);
					this.SendPropertyChanging();
					this._PokemonDefender1ID = value;
					this.SendPropertyChanged("PokemonDefender1ID");
					this.OnPokemonDefender1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonDefender2ID", DbType="Int NOT NULL")]
		public int PokemonDefender2ID
		{
			get
			{
				return this._PokemonDefender2ID;
			}
			set
			{
				if ((this._PokemonDefender2ID != value))
				{
					this.OnPokemonDefender2IDChanging(value);
					this.SendPropertyChanging();
					this._PokemonDefender2ID = value;
					this.SendPropertyChanged("PokemonDefender2ID");
					this.OnPokemonDefender2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonDefender3ID", DbType="Int NOT NULL")]
		public int PokemonDefender3ID
		{
			get
			{
				return this._PokemonDefender3ID;
			}
			set
			{
				if ((this._PokemonDefender3ID != value))
				{
					this.OnPokemonDefender3IDChanging(value);
					this.SendPropertyChanging();
					this._PokemonDefender3ID = value;
					this.SendPropertyChanged("PokemonDefender3ID");
					this.OnPokemonDefender3IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int")]
		public System.Nullable<int> Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDescription", DbType="VarChar(50)")]
		public string ResultDescription
		{
			get
			{
				return this._ResultDescription;
			}
			set
			{
				if ((this._ResultDescription != value))
				{
					this.OnResultDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ResultDescription = value;
					this.SendPropertyChanged("ResultDescription");
					this.OnResultDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="Date")]
		public System.Nullable<System.DateTime> ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this.OnResultDateChanging(value);
					this.SendPropertyChanging();
					this._ResultDate = value;
					this.SendPropertyChanged("ResultDate");
					this.OnResultDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_User_PokemonList")]
	public partial class View_User_PokemonList
	{
		
		private int _UserID;
		
		private string _Name;
		
		private int _DamageRate;
		
		private int _HitPoint;
		
		private int _Cost;
		
		public View_User_PokemonList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DamageRate", DbType="Int NOT NULL")]
		public int DamageRate
		{
			get
			{
				return this._DamageRate;
			}
			set
			{
				if ((this._DamageRate != value))
				{
					this._DamageRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitPoint", DbType="Int NOT NULL")]
		public int HitPoint
		{
			get
			{
				return this._HitPoint;
			}
			set
			{
				if ((this._HitPoint != value))
				{
					this._HitPoint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Int NOT NULL")]
		public int Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PokemonType")]
	public partial class PokemonType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PokemonTypeID;
		
		private string _Name;
		
		private EntitySet<Pokemon> _Pokemons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPokemonTypeIDChanging(int value);
    partial void OnPokemonTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PokemonType()
		{
			this._Pokemons = new EntitySet<Pokemon>(new Action<Pokemon>(this.attach_Pokemons), new Action<Pokemon>(this.detach_Pokemons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PokemonTypeID
		{
			get
			{
				return this._PokemonTypeID;
			}
			set
			{
				if ((this._PokemonTypeID != value))
				{
					this.OnPokemonTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PokemonTypeID = value;
					this.SendPropertyChanged("PokemonTypeID");
					this.OnPokemonTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PokemonType_Pokemon", Storage="_Pokemons", ThisKey="PokemonTypeID", OtherKey="PokemonTypeID")]
		public EntitySet<Pokemon> Pokemons
		{
			get
			{
				return this._Pokemons;
			}
			set
			{
				this._Pokemons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pokemons(Pokemon entity)
		{
			this.SendPropertyChanging();
			entity.PokemonType = this;
		}
		
		private void detach_Pokemons(Pokemon entity)
		{
			this.SendPropertyChanging();
			entity.PokemonType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_PokemonType_Pokemon")]
	public partial class View_PokemonType_Pokemon
	{
		
		private string _PokemonTypeName;
		
		private int _PokemonTypeID;
		
		private int _DamageRate;
		
		private int _HitPoint;
		
		private string _PokemonName;
		
		private int _Cost;
		
		public View_PokemonType_Pokemon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PokemonTypeName
		{
			get
			{
				return this._PokemonTypeName;
			}
			set
			{
				if ((this._PokemonTypeName != value))
				{
					this._PokemonTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonTypeID", DbType="Int NOT NULL")]
		public int PokemonTypeID
		{
			get
			{
				return this._PokemonTypeID;
			}
			set
			{
				if ((this._PokemonTypeID != value))
				{
					this._PokemonTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DamageRate", DbType="Int NOT NULL")]
		public int DamageRate
		{
			get
			{
				return this._DamageRate;
			}
			set
			{
				if ((this._DamageRate != value))
				{
					this._DamageRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitPoint", DbType="Int NOT NULL")]
		public int HitPoint
		{
			get
			{
				return this._HitPoint;
			}
			set
			{
				if ((this._HitPoint != value))
				{
					this._HitPoint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PokemonName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PokemonName
		{
			get
			{
				return this._PokemonName;
			}
			set
			{
				if ((this._PokemonName != value))
				{
					this._PokemonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Int NOT NULL")]
		public int Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
